#image: registry.it.mcgill.ca/lts/murax/hyrax:latest
image: ruby:2.5
services:
    - redis:latest
    - postgres:latest

variables:
  # make sure that your .gitmodules file is configured to use relative paths!
  GIT_SUBMODULE_STRATEGY: recursive
  POSTGRES_DB: ruby-getting-started_test
  BUNDLE_PATH: vendor/bundle
  DISABLE_SPRING: 1
  DB_HOST: postgres

# Cache gems in between builds
cache:
  paths:
    - vendor/
    - node_modules
    - log

before_script:
  # Run the ssh-agent
  #- eval $(ssh-agent -s)
  #- printenv
  #- ruby -v
  #- which ruby
  #- ls -la $(pwd)
  #- apt  remove cmdtest -y
  #- curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
  #- echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
  #- apt update
  #- apt -qq install yarn
  #- yarn
  #- bundle check || bundle install --jobs $(nproc) --path vendor
  #- cp config/database.yml.ci config/database.yml
  #- bundle exec rails db:create RAILS_ENV=development
  #- bundle exec rails db:schema:load RAILS_ENV=development
  #- bundle exec webpack

stages:
  - lint
  - test
  - deploy_dev
  - deploy_qa
  - deploy_prod
  - cleanup

rspec:
  stage: test
  script:
    - bundle exec rspec
  tags:
    - azure

rubocop:
  stage: test
  script:
    - bundle exec rubocop
  tags:
    - azure

pronto:
  stage: lint
  allow_failure: true
  except:
    - master
  script:
    - bundle exec pronto run
  tags:
    - azure

lint:
  image: ruby:2.5
  variables:
    PRONTO_GITLAB_API_ENDPOINT: "https://gitlab.ncs.mcgill.ca/api/v4"
    PRONTO_GITLAB_API_PRIVATE_TOKEN: token
  only:
    - merge_requests
  script:
    - bundle install
    - bundle exec pronto run
  tags:
    - azure

develop_deploy:
  stage: deploy_dev
  script:
    - bundle exec cap development deploy
  only:
    - develop
  tags:
    - azure

staging_deploy:
  stage: deploy_qa
  script:
    - bundle exec cap staging deploy
  only:
    - master
  tags:
    - azure

production_deploy:
  stage: deploy_qa
  script:
    - bundle exec cap production deploy
  only:
    - master
  when: manual
  tags:
    - azure

cleanup:
  stage: cleanup
  script:
    - rm -rf .vault-password
    - rm -rf /root/.ssh
  when: always
  tags:
    - azure

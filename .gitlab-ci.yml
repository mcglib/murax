#image: registry.it.mcgill.ca/docker/rhel7-ansible
image: ruby:2.5
services:
    - redis:latest
    - postgres:latest

variables:
  # make sure that your .gitmodules file is configured to use relative paths!
  GIT_SUBMODULE_STRATEGY: recursive
  ANSIBLE_CONFIG: /builds/lts/murax/ansible.cfg

# Cache gems in between builds
cache:
  paths:
    - vendor/ruby
    - node_modules
    - log

before_script:
  # Run the ssh-agent
  - eval $(ssh-agent -s)
  # Load the SSH key used for GitLab role deploys.
  #- ssh-add <(echo "$ROLE_DEPLOY_KEY")
  # Configure our Ansible playbooka
  - printenv
  - ruby -v
  - which ruby
      # Install node and some other deps
  - curl -sL https://deb.nodesource.com/setup_8.x | bash -
  - apt-get update -yq
  - apt-get install -y apt-transport-https build-essential cmake nodejs software-properties-common unzip g++
  # Install yarn
  - wget -q -O - https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
  - echo "deb https://dl.yarnpkg.com/debian/ stable main" > /etc/apt/sources.list.d/yarn.list
  - apt-get update -yq
  - apt-get install -y yarn
  # Project setup
  - gem install capistrano rake bundler
  # Check if the dependencies are ok, if not install what is missing
    # Install the gems
  - bundle check || bundle install --jobs $(nproc) --path vendor
  - yarn install
  # database.yml.ci file contains the configurations for the CI
  # server, so let's copy to the configuration file
  - cp config/database.yml.ci config/database.yml
  - bundle exec rails db:create RAILS_ENV=test
  - bundle exec rails db:schema:load RAILS_ENV=test
  - bundle exec webpack

stages:
  - test
  - deploy_dev
  - deploy_qa
  - deploy_prod
  - cleanup

rspec:
  stage: test
  script:
    - bundle exec rspec
  tags:
    - azure

rubocop:
  tags:
    - azure
  stage: test
  script:
    - bundle exec rubocop
  tags:
    - azure

develop_deploy:
  tags:
    - azure
  stage: deploy_dev
  script:
    - cap development deploy
  only:
    - develop
  tags:
    - azure

staging_deploy:
  stage: deploy_qa
  script:
    - cap production deploy
  only:
    - master
  tags:
    - azure

production_deploy:
  stage: deploy_qa
  script:
    - cap production deploy
  only:
    - master
  when: manual
  tags:
    - azure

cleanup:
  stage: cleanup
  script:
    - rm -rf .vault-password
    - rm -rf /root/.ssh
  when: always
  tags:
    - azure

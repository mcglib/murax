#image: registry.it.mcgill.ca/docker/rhel7-ansible
image: ruby:2.3
services:
    - redis:latest
    - postgres:latest

variables:
  # make sure that your .gitmodules file is configured to use relative paths!
  GIT_SUBMODULE_STRATEGY: recursive
  ANSIBLE_CONFIG: /builds/lts/murax/ansible.cfg

# Cache gems in between builds
cache:
  paths:
    - vendor/ruby

before_script:
  # Run the ssh-agent
  - eval $(ssh-agent -s)
  # Load the SSH key used for GitLab role deploys.
  #- ssh-add <(echo "$ROLE_DEPLOY_KEY")
  # Configure our Ansible playbooka
  - printenv | less
  - ruby -v
  - which ruby
  - bundle install -j $(nproc) --path vendor  # Install dependencies into ./vendor/ruby
  - gem install capistrano

stages:
  - test
  - deploy_dev
  - deploy_qa
  - deploy_prod
  - cleanup

rspec:
  stage: test
  script:
    - bundle exec rspec

rubocop:
  stage: test
  script:
    - bundle exec rubocop

develop_deploy:
  stage: deploy_dev
  script:
    - gem install capistrano
    - cap development deploy
  only:
    - develop

staging_deploy:
  stage: deploy_qa
  script:
    - gem install capistrano
    - cap production deploy
  only:
    - master

production_deploy:
  stage: deploy_qa
  script:
    - gem install capistrano
    - cap production deploy
  only:
    - master
  when: manual

cleanup:
  stage: cleanup
  script:
    - rm -rf .vault-password
    - rm -rf /root/.ssh
  when: always

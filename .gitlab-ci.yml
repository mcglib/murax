#image: registry.it.mcgill.ca/lts/murax:latest
image: ruby:2.7

variables:
  # make sure that your .gitmodules file is configured to use relative paths!
  GIT_SUBMODULE_STRATEGY: recursive
  POSTGRES_DB: ruby-getting-started_test
  BUNDLE_PATH: /storage/www/murax/shared
  DISABLE_SPRING: 1
  DB_HOST: postgres
  BUNDLE_VERSION: 2.1.4
  RAILS_ENV: test

# Cache gems in between builds
cache:
  paths:
    - vendor/
    - node_modules
    - log
    - /storage/www/murax/shared


stages:
  - lint
  - build
  - rubocop
  - test
  - report
  - development
  - staging
  - production
  - cleanup

.base:
  stage: build
  cache:
    key:
      files:
        - Gemfile.lock
    paths:
      - vendor/bundle
      - node_modules/
    policy: pull
  before_script:
    - ruby -v # Print out ruby version for debugging
    - gem install bundler rubocop rubocop-rails rubocop-performance --no-document
    #- bundle config set path vendor/bundle
    #- bundle install --jobs $(nproc) "${FLAGS[@]}"
.base_deploy:
  variables:
    RAILS_ENV: production
  before_script:
    - export USER="$GITLAB_USER_LOGIN via gitlab"
    - "which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )"
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - git config --global user.email "$GITLAB_USER_LOGIN"
    - git config --global user.name "$GITLAB_USER_NAME"
    - gem install capistrano bundler capistrano-bundler capistrano-sidekiq capistrano-npm capistrano-locally capistrano-rails capistrano-ssh-doctor capistrano-safe-deploy-to --no-document
    - bundle config set path vendor/bundle

.base_db:
  extends: .base
  services:
    - postgres:latest
    - redis:latest
  variables:
    POSTGRES_DB: murax_gitlab
    POSTGRES_USER: murax
    POSTGRES_PASSWORD: "murax"
    RAILS_ENV: test
    DATABASE_HOST: postgres
    DISABLE_SPRING: 1
    BUNDLE_PATH: vendor/bundle
  before_script:
    - export APT_CACHE_DIR=`pwd`/apt-cache && mkdir -pv $APT_CACHE_DIR
    - apt-get update -qq && apt-get -o dir::cache::archives="$APT_CACHE_DIR" install -yqq nodejs libpq-dev
    - gem install bundler --no-document
    - bundle config set path vendor/bundle
    - bundle install --jobs $(nproc) "${FLAGS[@]}"
    - bundle exec rake db:create db:schema:load --trace

.base_minimal:
  image: alpine:latest
  cache: {}

.base_lint:
  image:
    name: cytopia/awesome-ci


lint:yaml:
  stage: lint
  allow_failure: true
  image:
    name: cytopia/yamllint
    entrypoint: ["/bin/ash", "-c"]
  artifacts:
    name: "$CI_JOB_NAME"
    when: on_failure
    expire_in: 1 days
    paths:
      - public/yamllint.txt
  script:
    - yamllint config/ >> public/yamllint.txt

lint:ruby:
  extends: .base_lint
  stage: lint
  artifacts:
    name: "$CI_JOB_NAME"
    when: on_failure
    expire_in: 1 days
    paths:
      - public/syntax-errors.txt
  script:
    #- file-crlf --path=app/ Disable for now
    - syntax-ruby --text --size --extension=rb --path=app/ >> public/syntax-errors.txt
    - syntax-ruby --text --size --extension=rb --path=config/ >> public/syntax-errors.txt
    - syntax-ruby --text --size --extension=rb --path=lib/ >> public/syntax-errors.txt

build:rubocop:
  extends: .base
  allow_failure: true
  stage: build
  cache:
    policy: pull-push
  only:
    - master
    - develop
  artifacts:
    name: "$CI_JOB_NAME"
    when: on_failure
    expire_in: 1 week
    paths:
      - public/rubocop-results.txt
  script:
    - rubocop >> public/rubocop-results.txt

test:bundle_audit:
  extends: .base
  allow_failure: true
  stage: test
  only:
    - master
  script:
    - bundle exec bundle audit check --update

test:brakeman:
  extends: .base
  stage: test
  allow_failure: true
  artifacts:
    name: brakeman_report
    when: always
    paths:
      - brakeman/
  only:
    - master
  script:
    - bundle exec brakeman --format html -o brakeman/index.html


pages:
  extends: .base_minimal
  stage: report
  allow_failure: true
  dependencies:
    - test:brakeman
  artifacts:
    name: time_tracking_artifacts
    paths:
      - public/brakeman
      - public/coverage
      - public/dawnscanner
      - public/erd.pdf
  only:
    - master
  script:
    - mv brakeman public/ || true
    - mv coverage public/ || true
    - mv dawnscanner public/ || true


deploy:development:
  extends: .base_deploy
  stage: development
  cache:
    policy: pull-push
  environment:
    name: development
    url: https://d-escholarship.mcgill.ca
  script:
    - echo "$DEPLOY_DEV_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - eval `ssh-agent -s`
    - chmod 400 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - bundle exec cap development deploy
  only:
    - develop
  tags:
    - azure
  artifacts:
    name: "$CI_JOB_NAME-capistrano-log"
    when: on_failure
    expire_in: 1 week
    paths:
      - log/capistrano.log
